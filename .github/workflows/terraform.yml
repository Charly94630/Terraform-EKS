name: "IAC" 

on:
  push:
    branches:
      - main
      - stage
    paths:
      - 'terraform/**'
  pull_request:
    branches:
      - main


env: 
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
  BUCKET_TF_STATE: ${{ secrets.BUCKET_TF_STATE }}
  AWS_REGION:  ${{ secrets.AWS_REGION }}
  EKS_CLUSTER:  ${{ secrets.EKS_CLUSTER }}

jobs:
  
  
  terraform:
    name: "Apply terraform code changes"
    runs-on: ubuntu-latest
    defaults:
      run: 
        shell: bash
        working-directory: ./terraform

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Setup AWS creds
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Install and configure kubectl
        run: |
            curl -o kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.21.2/2023-07-05/bin/linux/amd64/kubectl
            chmod +x ./kubectl
            mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl && export PATH=$PATH:$HOME/bin
            echo 'export PATH=$PATH:$HOME/bin' >> ~/.bashrc
            aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name ${{ secrets.EKS_CLUSTER }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
    
      - name: Terraform init
        id: init
        run: |
          rm -rf .terraform ; terraform init -backend-config="bucket=${{ env.BUCKET_TF_STATE }}"


      - name: Terraform format
        id: fmt
        run: |
          terraform fmt -recursive
          terraform fmt -check
        # if the fmt is not correct it will return a !=0 exit code which will exit de workflow 

      - name: Terraform validate
        id: validate
        run: terraform validate
        # this will check the syntax whether it is correct or not, the objects, attributes are correct or not
        
      - name: Terraform plan
        id: plan
        run: terraform plan -no-color -input=false -out planfile
        continue-on-error: true

      - name: Terraform plan status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform apply
        id: Apply     
        run: terraform destroy -auto-approve -input=false -parallelism=1 planfile 
              
      # - name: Terraform apply
        # id: Apply     
        # run: terraform apply -auto-approve -input=false -parallelism=1 planfile   

      # - name: Terraform apply
      #   id: Apply     
      #   run: terraform apply -auto-approve -input=false -parallelism=1 planfile
        # if workflow is being executed on main branch and also was due to a push, then terraform apply will be executed

